[
  {
    "title": "PitchDB",
    "projectId": "pitchdb",
    "mainTechs": "React, Node, Mongo",
    "description": "SaaS that allows users to search podcasts and speakers to promote their ideas. When prospects are found, users can compose and send emails to initiate communication with these prospects and later on track the progress for each one.",
    "techDescription":"The user-facing static website communicates with 2 node applications that provide the needed API services. The first node application handles user data management, email sending and podcast searching. The second node application handles businesses data querying from a mongo datasource. The node applications leverage many APIs like Google, Microsoft, Paypal and Hunter.io among others, to provide functions for signing in, email sending, payment collection, email searching and email verification.",
    "projectDates": "July 2018 - Present",
    "skillGroups": [
      {
        "category": "languages",
        "skills": [
          "JavaScript (ECMAScript 2017)",
          "HTML w/ Bootstrap",
          "CSS"
        ]
      },
      {
        "category": "frameworks",
        "skills": [
          "Node.js w/ Mongoose",
          "Express",
          "Socket.io",
          "Koa",
          "Mocha",
          "React",
          "Redux"
        ]
      },
      {
        "category": "tools",
        "skills": [
          "MongoDB",
          "Digital Ocean",
          "Linux",
          "Gitlab w/ CI",
          "OAuth 2.0",
          "Google APIs",
          "Paypal"
        ]
      }
    ],
    "networkLinks": [
      {
        "imgUrl": "website",
        "url": "https://pitchdb.com"
      }
    ]
  },
  {
    "title": "Moncrud",
    "projectId": "moncrud",
    "mainTechs": "Node, Mongo",
    "description": "Open-source tool which allows CRUD operations on any MongoDB database. The tool functions as a web application that can be used by any user without a software development background.",
    "techDescription":"The main application is built in Express and it is intented to be executed by itself on user servers. The moncrud page was built with gatsby as a static page and the demo runs on a Docker container hosted on AWS.",
    "projectDates": "November 2018 - Present",
    "skillGroups": [
      {
        "category": "languages",
        "skills": [
          "JavaScript (ECMAScript 2017)",
          "HTML w/ Bootstrap",
          "CSS w/ SASS"
        ]
      },
      {
        "category": "frameworks",
        "skills": [
          "Node.js",
          "Express w/ Pug",
          "GatsbyJS"
        ]
      },
      {
        "category": "tools",
        "skills": [
          "MongoDB",
          "Github",
          "AWS Amplify",
          "Docker"
        ]
      }
    ],
    "networkLinks": [
      {
        "imgUrl": "website",
        "url": "https://moncrud.com"
      },
      {
        "imgUrl": "github",
        "url": "https://github.com/sbeltran10/moncrud"
      }
    ]
  },
  {
    "title": "GersafeII",
    "projectId": "gersafeii",
    "mainTechs": "AngularJS, JavaEE, SQL Oracle",
    "description": "Enterprise web application used by a sea shipping company to carry out day-to-day operations. The application features management modules for different areas of the company, an email alarm system and data transformation for filling government-required documents.",
    "techDescription":"The user-facing static website communicates with multiple JavaEE applications that provide the services it needs. The JavaEE applications run on a Wildfly server and they handle CRUD operations and user data management. Another important component is the Enterprise Service Bus (ESB) that orchestrates the communication between the JavaEE modules and also provides services for data transforming and email sending.",
    "projectDates": "September 2017 - July 2018",
    "skillGroups": [
      {
        "category": "languages",
        "skills": [
          "Java",
          "SQL",
          "JavaScript",
          "HTML w/ Bootstrap",
          "CSS"
        ]
      },
      {
        "category": "frameworks",
        "skills": [
          "JavaEE",
          "JPA",
          "Apache Camel",
          "AngularJS"
        ]
      },
      {
        "category": "tools",
        "skills": [
          "SQL Oracle",
          "AWS EC2",
          "Linux",
          "Bash",
          "Gitlab",
          "Stored Procedures"
        ]
      }
    ],
    "networkLinks": [
    ]
  },
  {
    "title": "CollabIDE",
    "projectId": "collabide",
    "mainTechs": "Node, Firebase",
    "description": "(Research project) Integrated Development Environment in the cloud that helps development teams collaborate on a software project.",
    "techDescription":"The main application uses Express to deliver the web content to users and coordinate the interaction between different user sessions. CollabIDE leverages Firebase's real-time database to display changes to users collaborating on a project.",
    "projectDates": "January 2017 - July 2017",
    "skillGroups": [
      {
        "category": "languages",
        "skills": [
          "JavaScript",
          "HTML",
          "CSS"
        ]
      },
      {
        "category": "frameworks",
        "skills": [
          "Node.js",
          "Express"
        ]
      },
      {
        "category": "tools",
        "skills": [
          "Firebase",
          "Heroku",
          "Github"
        ]
      }
    ],
    "networkLinks": [
      {
        "imgUrl": "website",
        "url": "https://www.researchgate.net/publication/326844516_A_collaborative_IDE_for_dynamic_multi-versioning_and_variant_management"
      },
      {
        "imgUrl": "github",
        "url": "https://github.com/sbeltran10/collabIDE"
      }
    ]
  },
  {
    "title": "WalkingRoutes",
    "projectId": "walkingroutes",
    "mainTechs": "React, Node, AWS",
    "description": "Web application that allows the creation of touristic routes for different cities of the world. Support creating content in many different languages.",
    "techDescription":"The user-facing application is a static website hosted on a EC2 instance. The back-end is an entirely serverless solution, using AWS to create the API needed by the front-end.",
    "projectDates": "October 2017 - December 2017",
    "skillGroups": [
      {
        "category": "languages",
        "skills": [
          "JavaScript",
          "HTML w/ Bootstrap",
          "CSS"
        ]
      },
      {
        "category": "frameworks",
        "skills": [
          "Node.js"
        ]
      },
      {
        "category": "tools",
        "skills": [
          "AWS EC2",
          "AWS Lambda",
          "AWS API Gateway",
          "AWS S3",
          "AWS Dynamo",
          "Gitlab",
          "Linux"
        ]
      }
    ],
    "networkLinks": [
    ]
  },
  {
    "title": "Questionnaire",
    "projectId": "questionnairequest",
    "mainTechs": "React Native, AWS",
    "description": "React Naitve application intented to be used as a media rich branching questionnaire component. Three different types of questionnaire are supported: survey, quiz and games.",
    "techDescription":"The mobile application is built in its entirity with React Native. The back-end is a completely serverless solution using AWS to create the API needed by the mobile application.",
    "projectDates": "April 2019 - May 2019",
    "skillGroups": [
      {
        "category": "languages",
        "skills": [
          "JavaScript"
        ]
      },
      {
        "category": "frameworks",
        "skills": [
          "Node.js",
          "React Native"
        ]
      },
      {
        "category": "tools",
        "skills": [
          "AWS Lambda",
          "AWS API Gateway",
          "AWS Dynamo",
          "Github"
        ]
      }
    ],
    "networkLinks": [
      {
        "imgUrl": "github",
        "url": "https://github.com/sbeltran10/react-native-questionnaire-quest"
      }
    ]
  }
]